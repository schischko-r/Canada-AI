<!DOCTYPE html>
<html lang="en">
<head>
    <title>Welcom Vacanda's forest site</title>

    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="IE=Edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="This sample shows how to add the map style picker control to the map." />
    <meta name="keywords" content="Microsoft maps, map, gis, API, SDK,  navigation controls, map style, style picker, map type, satellite, aerial, imagery" />
    <meta name="author" content="Microsoft Azure Maps" />

    <!-- Add references to the Azure Maps Map control JavaScript and CSS files. -->
    <link rel="stylesheet" href="https://atlas.microsoft.com/sdk/javascript/mapcontrol/2/atlas.min.css" type="text/css" />
    <link rel="shortcut icon" href="favicon.ico" />
    <link rel="stylesheet" href="style.css?0393243">
    <script src="https://atlas.microsoft.com/sdk/javascript/mapcontrol/2/atlas.min.js"></script>

    <!-- Add references to the Azure Maps Map Drawing Tools JavaScript and CSS files. -->
    <link rel="stylesheet" href="https://atlas.microsoft.com/sdk/javascript/drawing/0/atlas-drawing.min.css" type="text/css" />
    <script src="https://atlas.microsoft.com/sdk/javascript/drawing/0/atlas-drawing.min.js"></script>

    <script type='text/javascript'>
        var map, datasource;
        var azureMapsSubscriptionKey = 'p3R9NNrAlX8xyDjtv2IeqbBMUZ8SRtbg4N-BtDXfWnc';
        function GetMap() {
            //Initialize a map instance.
            map = new atlas.Map('myMap', {
                center: [-95, 58],
                zoom: 3,
                view: 'Auto',
                //Add your Azure Maps key to the map SDK. Get an Azure Maps key at https://azure.com/maps. NOTE: The primary key should be used as the key.
                authOptions: {
                    authType: 'subscriptionKey',
                    subscriptionKey: azureMapsSubscriptionKey
                }
            });

            //Wait until the map resources are ready.
            map.events.add('ready', function () {

                //Add a style control to the map.
                map.controls.add(new atlas.control.StyleControl({
                    //Optionally specify which map styles you want to appear in the picker.
                    //All styles available with the S0 license tier appear by default in the control.
                    //If using a S1 tier license, you can use the mapStyles option to add premium styles such as 'satellite' and 'satellite_road_labels' to the control.
                    //To add all available styles, you can use the 'all' keyword.
                    mapStyles: 'all'

                    //Alternatively, specify an array of all the map styles you would like displayed in the style picker.
                    //mapStyles: ['road', 'road_shaded_relief', 'grayscale_light', 'night', 'grayscale_dark', 'satellite', 'satellite_road_labels', 'high_contrast_dark']
                }), {
                    position: 'bottom-left'
                });
                //Prikol
                //Create an instance of the drawing manager and display the drawing toolbar.
                drawingManager = new atlas.drawing.DrawingManager(map, {
                    toolbar: new atlas.control.DrawingToolbar({
                        buttons: ['draw-polygon', 'draw-rectangle', 'draw-circle'],
                        position: 'top-right',
                        style: 'light'
                    })
                });

                //Clear the map and drawing canvas when the user enters into a drawing mode.
                map.events.add('drawingmodechanged', drawingManager, drawingModeChanged);

                //Monitor for when a polygon drawing has been completed.
                map.events.add('drawingchanging', drawingManager, measureShape);
                map.events.add('drawingcomplete', drawingManager, drawingComplete);
                //Prikol
            });
        }
        //Prikol2
        function drawingModeChanged(mode) {
            //Clear the drawing canvas when the user enters into a drawing mode.
            if (mode.startsWith('draw')) {
                drawingManager.getSource().clear();
                document.getElementById('measurementInfo').innerHTML = '';
            }
        }

        function drawingComplete(shape) {
            //Exit drawing mode.
            drawingManager.setOptions({ mode: 'idle' });

            measureShape(shape);
        }

        function measureShape(shape) {
            var msg = '';

            //If the search area is a circle, create a polygon from its circle coordinates.
            if (shape.isCircle()) {
                var r = atlas.math.convertDistance(shape.getProperties().radius, 'meters', 'miles', 2);
                var a = Math.round(2 * Math.PI * r * r * 100) / 100;
                var p = Math.round(2 * Math.PI * r * 100) / 100;

                msg = `Radius: ${r} mi<br/>Area: ${a} sq mi<br/>Perimeter: ${p} mi`;
            } else {
                var g = shape.toJson().geometry;
                var polygon;

                switch (shape.getType()) {
                    case 'LineString'://Здесь насрал Серёга
                        var l = Math.round(atlas.math.getLengthOfPath(g.coordinates, 'miles') * 100) / 100;
                        msg += `Length: ${l} mi`;

                        //Polygon's are rendered as lines when initially being drawn.
                        if (drawingManager.getOptions().mode === 'draw-polygon') {
                            polygon = new atlas.data.Polygon(g.coordinates);
                        }
                        break;
                    case 'Polygon':
                        polygon = g;

                        var p = Math.round(atlas.math.getLengthOfPath(g.coordinates[0], 'miles') * 100) / 100;
                        msg = `Perimeter: ${p} mi`;
                        break;
                }

                if (polygon) {
                    msg += `<br/>Area: ${atlas.math.getArea(polygon, 'squareMiles', 2)} sq mi`;
                }
            }

            document.getElementById('measurementInfo').innerHTML = msg;
        }
        //Prikol2
    </script>
</head>

<body onload="GetMap()">
    <div id="myMap" style="position:relative;width:70%;min-width:290px;height:600px;"></div>
    <div id="measurementInfo" style="position:absolute;top:110px;left:10px;background-color:white;border-radius:10px;padding:10px;"></div>

    <div class="text-center" style="padding: 50px 0">
        <a href="~/Home/Calc" type="button" id="button2">Ввести данные</a>

        <input type="button" onclick="Button1_click" id="btn" style="width: 200px;height: 100px" class="btn btn-success text-center" value="Жмяк">
    </div>

    <hr>
    <footer>
        &copy;Vacanda
    </footer>
</body>
</html>